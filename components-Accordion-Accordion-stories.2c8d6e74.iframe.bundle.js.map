{"version":3,"file":"components-Accordion-Accordion-stories.2c8d6e74.iframe.bundle.js","mappings":";AAKA;;AAEA;AACA;;AAEA;AAEA;AACA;;;;AAKA;;AAEA;AACA;;;AAGA;;;;;;AAMA;AACA;;;AAGA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AC/BA;AACA;AACA;AACA;ACVA","sources":["webpack://@kanddo-ui/react/./src/components/Accordion/Accordion.styles.ts","webpack://@kanddo-ui/react/./src/components/Typography/Typography.styles.ts","webpack://@kanddo-ui/react/./src/components/Typography/Typography.tsx"],"sourcesContent":["import { borderRadius, colors, sizes, spacing, transitions, typography } from '@kanddo-ui/core';\nimport styled from 'styled-components';\n\nexport const Component = {\n  Wrapper: styled.div`\n    font-family: ${typography.fontFamily};\n    width: 100%;\n    border: 1px solid ${colors.background.muted};\n    border-radius: ${borderRadius(sizes.small)};\n    overflow: hidden;\n    background: ${colors.background.default};\n  `,\n  Item: styled.div`\n    border-bottom: 1px solid ${colors.background.muted};\n    &:last-child {\n      border-bottom: none;\n    }\n  `,\n  Header: styled.button<{ isOpen: boolean }>`\n    width: 100%;\n    padding: ${spacing.small};\n    font-size: ${typography.sizes.small};\n    border: none;\n    text-align: left;\n    background: ${({ isOpen }) => (isOpen ? colors.primary[500] : colors.background.default)};\n    cursor: pointer;\n    outline: none;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-radius: ${borderRadius(sizes.xsmall)};\n    transition: ${transitions.color}, background 0.2s ease-in-out;\n\n    & > * {\n      color: ${({ isOpen }) => (isOpen ? colors.text.inverted : colors.text.default)};\n    }\n  `,\n  Content: styled.div<{ isOpen: boolean }>`\n    max-height: ${({ isOpen }) => (isOpen ? \"500px\" : \"0\")};\n    overflow: hidden;\n    padding: ${spacing.small};\n    background: ${colors.background.default};\n    font-size: ${typography.sizes.small};\n    color: ${colors.text.default};\n    opacity: ${({ isOpen }) => (isOpen ? 1 : 0)};\n    transition: max-height 0.4s cubic-bezier(0.4, 0, 0.2, 1), opacity 0.3s ease-in-out, padding 0.3s ease-in-out;\n    ${({ isOpen }) => (!isOpen ? \"padding-top: 0; padding-bottom: 0;\" : \"\")}\n  `,\n};","import styled from 'styled-components';\nimport { colors, typography } from '@kanddo-ui/core';\n\nexport const typographyStyles = {\n    h1: { fontSize: typography.sizes.xxxxLarge, fontWeight: typography.weight.bold },\n    h2: { fontSize: typography.sizes.xxxLarge, fontWeight: typography.weight.semiBold },\n    h3: { fontSize: typography.sizes.xxLarge, fontWeight: typography.weight.medium },\n    h4: { fontSize: typography.sizes.xLarge, fontWeight: typography.weight.semiBold },\n    h5: { fontSize: typography.sizes.large, fontWeight: typography.weight.regular },\n    h6: { fontSize: typography.sizes.medium, fontWeight: typography.weight.light },\n    default: { fontSize: typography.sizes.small, fontWeight: typography.weight.regular },\n    bodySmall: { fontSize: typography.sizes.xSmall, fontWeight: typography.weight.light }\n};\n\nexport const Component = styled.span<{ variant: keyof typeof typographyStyles }>`\n    font-family: ${typography.fontFamily};\n    color: ${colors.text.default};\n    font-size: ${(props) => typographyStyles[props.variant].fontSize};\n    font-weight: ${(props) => typographyStyles[props.variant].fontWeight};\n`;\n","import React from 'react';\nimport { Component, typographyStyles } from './Typography.styles';\n\nexport interface TypographyProps {\n    variant: keyof typeof typographyStyles;\n    children: React.ReactNode;\n}\n\nexport const Typography: React.FC<TypographyProps> = ({ variant, children }) => {\n    return <Component variant={variant}>{children}</Component>;\n};\n\n"],"names":[],"sourceRoot":""}