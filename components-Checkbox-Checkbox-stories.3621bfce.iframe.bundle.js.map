{"version":3,"file":"components-Checkbox-Checkbox-stories.3621bfce.iframe.bundle.js","mappings":";AAMA;AACA;AACA;;;;AAKA;;;AAGA;;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;;AAGA;;;;ACvBA;ACKA;AACA;AACA;AACA;ACVA","sources":["webpack://@kanddo-ui/react/./src/components/Checkbox/Checkbox.styles.ts","webpack://@kanddo-ui/react/./src/components/Checkbox/Checkbox.tsx","webpack://@kanddo-ui/react/./src/components/Typography/Typography.styles.ts","webpack://@kanddo-ui/react/./src/components/Typography/Typography.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { borderRadius, sizes, transitions } from '@kanddo-ui/core';\nimport { colors, spacing, typography } from '@kanddo-ui/core';\n\nexport const Component = {\n    Wrapper: styled.div`\n        font-family: ${typography.fontFamily};\n        margin-bottom: ${spacing.large};\n        color: ${colors.text.default};\n        width: 100%;\n        display: flex;\n        flex-direction: column;\n    `,\n    Label: styled.label`\n        display: flex;\n        align-items: center;\n        gap: ${spacing.small};\n        cursor: pointer;\n    `,\n    Box: styled.input`\n        width: ${sizes.medium};\n        height: ${sizes.medium};\n        border: 1px solid ${colors.background.muted};\n        border-radius: ${borderRadius(sizes.xsmall)};\n        transition: ${transitions.color};\n        display: flex;\n        align-items: center;\n        justify-content: center;\n\n        &:checked {\n            accent-color: ${colors.background.default};\n        }\n    `,\n    Hint: styled.div`\n        display: flex;\n        align-items: flex-start;\n        width: 100%;\n    `,\n};","import React from 'react';\nimport { Typography } from '../Typography/Typography';\nimport { Component } from './Checkbox.styles';\n\nexport interface CheckboxProps {\n    label: string;\n    checked: boolean;\n    onChange: (checked: boolean) => void;\n    hint?: string;\n}\nexport const Checkbox: React.FC<CheckboxProps> = ({\n    label,\n    checked,\n    onChange,\n    hint,\n}) => (\n    <Component.Wrapper>\n        <Component.Label>\n            <Component.Box\n                type='checkbox'\n                checked={checked}\n                onChange={(e) => onChange(e.target.checked)}\n            />\n            <Typography variant='default'>{label}</Typography>\n        </Component.Label>\n        {hint && <Component.Hint><Typography variant='bodySmall'>{hint}</Typography></Component.Hint>}\n    </Component.Wrapper>\n);\n\n","import styled from 'styled-components';\nimport { colors, typography } from '@kanddo-ui/core';\n\nexport const typographyStyles = {\n    h1: { fontSize: typography.sizes.xxxxLarge, fontWeight: typography.weight.bold },\n    h2: { fontSize: typography.sizes.xxxLarge, fontWeight: typography.weight.semiBold },\n    h3: { fontSize: typography.sizes.xxLarge, fontWeight: typography.weight.medium },\n    h4: { fontSize: typography.sizes.xLarge, fontWeight: typography.weight.semiBold },\n    h5: { fontSize: typography.sizes.large, fontWeight: typography.weight.regular },\n    h6: { fontSize: typography.sizes.medium, fontWeight: typography.weight.light },\n    default: { fontSize: typography.sizes.small, fontWeight: typography.weight.regular },\n    bodySmall: { fontSize: typography.sizes.xSmall, fontWeight: typography.weight.light }\n};\n\nexport const Component = styled.span<{ variant: keyof typeof typographyStyles }>`\n    font-family: ${typography.fontFamily};\n    color: ${colors.text.default};\n    font-size: ${(props) => typographyStyles[props.variant].fontSize};\n    font-weight: ${(props) => typographyStyles[props.variant].fontWeight};\n`;\n","import React from 'react';\nimport { Component, typographyStyles } from './Typography.styles';\n\nexport interface TypographyProps {\n    variant: keyof typeof typographyStyles;\n    children: React.ReactNode;\n}\n\nexport const Typography: React.FC<TypographyProps> = ({ variant, children }) => {\n    return <Component variant={variant}>{children}</Component>;\n};\n\n"],"names":[],"sourceRoot":""}